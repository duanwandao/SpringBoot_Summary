<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 配置mysql 驱动jar包路径.用了绝对路径 -->
    <!-- 坑爹▄█▀█● ，加了会报下面提示，不加直接说找不到-->
    <!-- 又被自动加载配置了 The new driver class is `com.mysql.cj.jdbc.Driver'.-->
    <classPathEntry location="D:/aasoftware/mysql-connector-java-8.0.13.jar" />

    <context id="mysqlgenerator" targetRuntime="MyBatis3">

        <!-- 非官方插件 https://github.com/itfsw/mybatis-generator-plugin -->
        <!-- 查询单条数据插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.SelectOneByExamplePlugin" />
        <!-- 查询结果选择性返回插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.SelectSelectivePlugin" />
        <!-- Example Criteria 增强插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.ExampleEnhancedPlugin" />
        <!-- 数据Model属性对应Column获取插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.ModelColumnPlugin" />
        <!-- 逻辑删除插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.LogicalDeletePlugin">
            <!-- 这里配置的是全局逻辑删除列和逻辑删除值，当然在table中配置的值会覆盖该全局配置 -->
            <!-- 逻辑删除列类型只能为数字、字符串或者布尔类型 -->
            <property name="logicalDeleteColumn" value="deleted" />
            <!-- 逻辑删除-已删除值 -->
            <property name="logicalDeleteValue" value="1" />
            <!-- 逻辑删除-未删除值 -->
            <property name="logicalUnDeleteValue" value="0" />
        </plugin>
        <!-- MySQL分页插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LimitPlugin" />
        <!-- Example 目标包修改插件 -->
        <!-- <plugin
            type="com.itfsw.mybatis.generator.plugins.ExampleTargetPlugin">
            修改Example类生成到目标包下
            <property name="targetPackage"
                value="com.yonyou.model.example" />
        </plugin> -->
        <!-- 批量插入插件 -->
        <plugin
                type="com.itfsw.mybatis.generator.plugins.BatchInsertPlugin">
            <!-- 开启后可以实现官方插件根据属性是否为空决定是否插入该字段功能 ！需开启allowMultiQueries=true多条sql提交操作，所以不建议使用！插件默认不开启 -->
            <property name="allowMultiQueries" value="false" />
        </plugin>

        <!-- 存在即更新插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.UpsertPlugin">
            <!-- 支持upsertByExample，upsertByExampleSelective操作 ！需开启allowMultiQueries=true多条sql提交操作，所以不建议使用！插件默认不开启 -->
            <property name="allowMultiQueries" value="false" />
            <!-- 开启批量功能，支持batchUpsert,batchUpsertWithBLOBs,batchUpserSelective ！这几个方法中无法支持IncrementsPlugin的方法！插件默认不开启 -->
            <property name="allowBatchUpsert" value="fasle" />
        </plugin>

        <!-- 防止生成的代码中有很多注释，加入下面的配置控制 -->
        <commentGenerator>
            <!-- 是否去除自动生成的注释.true:是;false:否 -->
            <property name="suppressAllComments" value="true" />
            <property name="suppressDate" value="true" />
        </commentGenerator>

        <!-- 数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/db_springboot_demo?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;nullCatalogMeansCurrent=true"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 数据表对应的model层  -->
        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
          targetPackage     指定生成的model生成所在的包名
          targetProject     指定在该项目下所在的路径
      -->
        <javaModelGenerator targetPackage="com.zjx.mybatisgenerator.entity" targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true" />
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true" />
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!-- sql mapper 映射配置文件 -->
        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <!-- 生成的映射文件包名和位置 -->
        <sqlMapGenerator targetPackage="mappers"  targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- mybatis3中的mapper接口 -->
        <!-- 生成DAO的包名和位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.zjx.mybatisgenerator.dao"  targetProject="./src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!-- 数据表进行生成操作 schema:相当于库名; tableName:表名; domainObjectName:对应的DO -->
        <table schema="db_springboot_demo" tableName="tb_user" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>

    </context>
</generatorConfiguration>